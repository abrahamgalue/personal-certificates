---
import type { ImageMetadata } from 'astro'
import type { CertificateCard, ISODateString } from '@/types/certificates'
import { Image } from 'astro:assets'

interface Props extends CertificateCard {}

const { name, institution, date, type, tags, description, pdfPath, imagePath } =
  Astro.props

const formattedDate = (date: ISODateString) => {
  const fecha = new Date(date)

  return fecha.toLocaleDateString('es-ES', {
    day: 'numeric',
    month: 'long',
    year: 'numeric',
    timeZone: 'UTC',
  })
}

const images = import.meta.glob<{ default: ImageMetadata }>(
  '/src/assets/*.{jpeg,jpg,png,gif,webp}'
)
if (!images[imagePath])
  throw new Error(
    `"${imagePath}" does not exist in glob: "src/assets/*.{jpeg,jpg,png,gif,webp}"`
  )
---

<a
  class="certificate-card"
  href={pdfPath}
  target="_blank"
  rel="noopener noreferrer"
  data-tags={tags.join(' ').toLowerCase()}
  data-name={name.toLowerCase()}
  data-institution={institution.toLowerCase()}
  data-type={type.toLowerCase()}
  data-date={date}
  aria-label={`Abrir certificado ${name} en una nueva pestaÃ±a`}
>
  <div class="certificate-preview">
    <Image
      src={images[imagePath]()}
      alt={`Vista previa de ${name}`}
      class="preview-image"
    />
    <span class="certificate-type">{type}</span>
  </div>

  <div class="card-content">
    <h3 class="certificate-name">{name}</h3>
    <p class="certificate-institution">
      {institution}<span class="certificate-date">
        - {formattedDate(date)}</span
      >
    </p>

    {description && <p class="certificate-description">{description}</p>}

    <div class="certificate-tags">
      {
        tags.map((tag) => (
          <span class="tag" data-tag={tag.toLowerCase()}>
            {tag}
          </span>
        ))
      }
    </div>
  </div>
</a>

<style>
  .certificate-card {
    background: linear-gradient(135deg, #1e293b 0%, #0f172a 100%);
    border-radius: 16px;
    border: 1px solid #334155;
    cursor: pointer;
    display: flex;
    flex-direction: column;
    overflow: hidden;
    padding: 1.5rem;
    position: relative;
    text-decoration: none;
    transition: all 0.3s ease;
  }

  .certificate-card::before {
    background: linear-gradient(90deg, #3b82f6, #1d4ed8, #2563eb);
    content: '';
    height: 3px;
    left: 0;
    position: absolute;
    right: 0;
    top: 0;
  }

  .certificate-card:hover,
  .certificate-card:focus-visible {
    border-color: #3b82f6;
    box-shadow: 0 25px 50px rgba(59, 130, 246, 0.2);
    outline: none;
    transform: translateY(-6px);
  }

  .certificate-card:focus-visible {
    box-shadow:
      0 0 0 3px rgba(59, 130, 246, 0.6),
      0 25px 50px rgba(59, 130, 246, 0.2);
  }

  .certificate-preview {
    display: flex;
    justify-content: center;
    position: relative;
  }

  .preview-image {
    height: auto;
    max-height: 270px;
    max-width: 100%;
    object-fit: contain;
    object-position: center;
    width: 100%;
  }

  .certificate-type {
    background: rgb(59, 130, 246);
    border-radius: 20px;
    border: 1px solid rgba(59, 130, 246, 0.3);
    color: white;
    font-size: 0.7rem;
    font-weight: 600;
    letter-spacing: 0.05em;
    padding: 0.25rem 0.75rem;
    position: absolute;
    right: 12px;
    text-transform: uppercase;
    top: 0;
  }

  .card-content {
    display: flex;
    flex-direction: column;
    flex-grow: 1;
    margin-top: 10px;
  }

  .certificate-name {
    color: #f1f5f9;
    font-size: 1.3rem;
    font-weight: 700;
    line-height: 1.3;
    margin: 0 0 0.5rem;
  }

  .certificate-institution {
    color: #3b82f6;
    font-size: 0.95rem;
    font-weight: 600;
    margin: 0 0 0.25rem;
  }

  .certificate-date {
    color: #64748a;
    font-size: 0.875rem;
    font-weight: 500;
    margin: 0 0 1rem;
  }

  .certificate-description {
    color: #64748b;
    font-size: 0.875rem;
    line-height: 1.5;
    margin: 0 0 1rem 0;
  }

  .certificate-tags {
    align-items: end;
    display: flex;
    flex-grow: 1;
    flex-wrap: wrap;
    gap: 0.5rem;
  }

  .tag {
    background: rgba(30, 58, 138, 0.3);
    border-radius: 8px;
    border: 1px solid rgba(59, 130, 246, 0.2);
    color: #bfdbfe;
    cursor: default;
    font-size: 0.75rem;
    font-weight: 500;
    padding: 0.25rem 0.6rem;
    user-select: none;
  }

  .fade-in {
    animation: fadeIn 0.3s ease;
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
</style>
